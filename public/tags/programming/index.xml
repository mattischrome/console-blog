<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on mattischrome</title>
    <link>https://mattischrome.com/tags/programming/</link>
    <description>Recent content in Programming on mattischrome</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 01 Jun 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://mattischrome.com/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The paths in the wood</title>
      <link>https://mattischrome.com/posts/the-paths-in-the-wood/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/the-paths-in-the-wood/</guid>
      <description>&lt;p&gt;I began writing this post after realising that it is the first of June and I might as well attempt once more to write a post every day. The speed with which the first of the month comes around, inviting another such promise, always amuses me. But at the moment I am not sure whether this blog will still exist come the end of the month. I think I want to start again in pastures new.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is FFI anyway?</title>
      <link>https://mattischrome.com/posts/what-is-ffi-anyway/</link>
      <pubDate>Thu, 03 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/what-is-ffi-anyway/</guid>
      <description>&lt;p&gt;At the moment I can’t compile this blog locally because my &lt;code&gt;ruby-ffi&lt;/code&gt; install is somehow wrong and is preventing Jekyll from running on my recently upgraded Mac system. Fortunately the site still compiles on Netlify, or else you wouldn’t be reading this!&lt;/p&gt;&#xA;&lt;p&gt;It’s always annoying when you rely on a complex multi-part system and some obscure part fails. It leaves you groping for answers and inventing unnecessary hack solutions. The dreaded old Stack Overflow rabbit hole. FFI stands for &lt;a href=&#34;https://en.wikipedia.org/wiki/Foreign_function_interface&#34;&gt;Foreign Function Interface&lt;/a&gt;, a mechanism that allows code written in one language to be called by another language.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Little Lesson in R</title>
      <link>https://mattischrome.com/posts/a-little-lesson-in-r/</link>
      <pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/a-little-lesson-in-r/</guid>
      <description>&lt;p&gt;I had to compute an indicator this week. It had confidence intervals that relied on taking 100,000 samples from the indicator&amp;rsquo;s approximate distribution. I had to repeat this over multiple GP practices and for twelve different demographic groups.&lt;/p&gt;&#xA;&lt;p&gt;I decided to use &lt;code&gt;dplyr&lt;/code&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; because I thought it would help me organise all subgroups involved. I used &lt;a href=&#34;http://dplyr.tidyverse.org/reference/summarise_all.html&#34;&gt;&lt;code&gt;mutate_at()&lt;/code&gt;&lt;/a&gt; heavily and thought that &lt;code&gt;dplyr&lt;/code&gt; was keeping everything organised. However, when I moved from the 10 samples I&amp;rsquo;d used for testing to the 100,000 samples required by the specification of the indicator, my code moved to a crawl. Fearing that my work laptop was a little puny, I left it running overnight on my Mac&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; and by morning R was still holding up its infuriating little stop sign.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Personal ggplot tips and tweaks</title>
      <link>https://mattischrome.com/posts/personal-ggplot-tips-and-tweaks/</link>
      <pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/personal-ggplot-tips-and-tweaks/</guid>
      <description>&lt;p&gt;I love making plots in R with &lt;code&gt;ggplot&lt;/code&gt;. However, there are always a few niggles that I forget about between plots. I wrote this post so that I have somewhere to look the next time I need to tweak a few things in my plots. I intend to come back and add updates in the future as I learn more things. If I keep coming back, I might also remember a few of these too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Swaptastic Part 3: The Shiny App</title>
      <link>https://mattischrome.com/posts/swaptastic-part-3/</link>
      <pubDate>Fri, 01 Jul 2016 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/swaptastic-part-3/</guid>
      <description>&lt;p&gt;The shiny app embedded below allows you to explore the number of packets you need to complete the Panini sticker album for this summer&amp;rsquo;s Euro tournament. This builds on the results I presented in an [earlier post](link to earlier post) and allows you to explore how many fewer packets you need to buy when you have more friends to swap with. You can also vary the number of runs performed because the model runs considerably slower with more swappers involved.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Swaptastic Part 2</title>
      <link>https://mattischrome.com/posts/swaptastic-part-2/</link>
      <pubDate>Wed, 29 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/swaptastic-part-2/</guid>
      <description>&lt;p&gt;As a follow-up to my post about the &lt;a href=&#34;https://mattischrome.com/euro-2016-panini-stickers/&#34;&gt;Euro 2016 Panini Stickers&lt;/a&gt;, I&amp;rsquo;ve now completed the collection with &lt;a href=&#34;https://mattischrome.com/swaptastic-part-1/&#34;&gt;the help of an online swapping site&lt;/a&gt; and by buying the last 39 stickers directly from Panini. I also managed to write a new simulator, this time with additional collectors involved.&lt;/p&gt;&#xA;&lt;p&gt;I assume that each of N collectors will buy a packet of stickers and add any new stickers to their album. Then they attempt to swap any leftovers with the rest of their friends. The intersect function in R makes this pretty easy to code up. Every collector who finishes the album stops buying stickers.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn X in Y Minutes</title>
      <link>https://mattischrome.com/posts/learn-x-in-y-minutes/</link>
      <pubDate>Wed, 03 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/learn-x-in-y-minutes/</guid>
      <description>&lt;p&gt;I found &amp;ldquo;Learn X in Y minutes&amp;rdquo; (&lt;a href=&#34;http://learnxinyminutes.com&#34;&gt;www.learnxinyminutes.com&lt;/a&gt;) while researching the programming languages needed for a new project. The site aims to help people who know at least one programming language to learn others by proving a quick run through of the main language features. It&amp;rsquo;s not quite enough to get you up and running. After all, having sample code doesn&amp;rsquo;t get you the compiler. However, it&amp;rsquo;s a nice start that shows you how similar (and different) language X is compared to the one(s) you already know.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Brains</title>
      <link>https://mattischrome.com/posts/building-brains/</link>
      <pubDate>Fri, 24 Oct 2014 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/building-brains/</guid>
      <description>&lt;p&gt;This is a longer form post about artificial intelligence inspired by reading a little bit of &amp;ldquo;The Pale King&amp;rdquo; by David Foster Wallace and putting a picture of a &amp;ldquo;ghost&amp;rdquo; up on Instagram. This might be the last of these that I&amp;rsquo;m able to write for a while.&lt;/p&gt;&#xA;&lt;h2 id=&#34;on-not-reading-the-pale-king&#34;&gt;On Not Reading &amp;ldquo;The Pale King&amp;rdquo;&lt;/h2&gt;&#xA;&lt;p&gt;&amp;ldquo;The Pale King&amp;rdquo; is the third and final novel by American author &lt;a href=&#34;http://www.newsweek.com/david-foster-wallace-appreciation-david-gates-89371&#34;&gt;David Foster Wallace&lt;/a&gt;. He was working on it when he committed suicide in 2008. It was compiled from incomplete notes and released posthumously in 2011. It deals with several characters around an &lt;a href=&#34;http://en.m.wikipedia.org/wiki/Internal_Revenue_Service&#34;&gt;IRS&lt;/a&gt; tax office in Peoria, Illinois&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming a Carcassonne Game</title>
      <link>https://mattischrome.com/posts/programming-a-carcassonne-game/</link>
      <pubDate>Fri, 21 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/programming-a-carcassonne-game/</guid>
      <description>&lt;p&gt;Although I have put off finishing &lt;a href=&#34;programming-an-uno-game&#34;&gt;my UNO game&lt;/a&gt; for over eighteen months, I thought I would get started with another pet project of mine: making a Carcassonne game. This is not a serious affair, there is an excellent app of Carcassonne available for those of you who have iOS devices (it works particularly well on the iPad). The game just strikes me as having the right level of complexity to be a taxing yet attainable project. I’d also like to understand strategies for playing the game and what better way to evaluate strategies for games of chance than to have a simulator to play all those millions of games that you don’t have time to play?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming an UNO game, part 2</title>
      <link>https://mattischrome.com/posts/programming-an-uno-game-part-2/</link>
      <pubDate>Wed, 02 Feb 2011 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/programming-an-uno-game-part-2/</guid>
      <description>&lt;p&gt;It turns out that programming the UNO game is not that complicated once you start designing the thing. This post will get the rules and game elements clear.&lt;/p&gt;&#xA;&lt;h4 id=&#34;the-deck&#34;&gt;The deck&lt;/h4&gt;&#xA;&lt;p&gt;An UNO deck consists of four sets of coloured cards (red, yellow, green and blue) together with eight wild cards. The non-wild cards are marked with either numbers or special symbols. The numbers range from zero to nine with two of each number except for the zero, which is unique. For each colour there are also two each of three kinds of special card: SKIP, SWAP and DRAW. The eight wild cards are divided into four each of two types: WILD and WILDFOUR. The wild cards are usually black in UNO decks so we may refer to them as black cards on occasion. There are one hundred and eight cards in total.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Programming an UNO game</title>
      <link>https://mattischrome.com/posts/programming-an-uno-game/</link>
      <pubDate>Tue, 28 Dec 2010 00:00:00 +0000</pubDate>
      <guid>https://mattischrome.com/posts/programming-an-uno-game/</guid>
      <description>&lt;h4 id=&#34;a-new-year-a-new-hobby&#34;&gt;A new year, a new hobby&lt;/h4&gt;&#xA;&lt;p&gt;I don’t write about programming enough. This is a shame because it is a very interesting subject and I find that the problem solving aspects of programming are very satisfying. Keenly aware of the need to do more hobby programming and to get up to speed on areas of software development that I’ve been neglecting, I have decided to give myself the project of creating a computerised version of the &lt;a href=&#34;http://en.wikipedia.org/wiki/Uno_(card_game)&#34;&gt;UNO card game&lt;/a&gt;. I know that one already exists, for example there’s an official one that you can play on MSN messenger.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
