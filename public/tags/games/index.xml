<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Games on mattischrome</title>
    <link>http://localhost:1313/tags/games/</link>
    <description>Recent content in Games on mattischrome</description>
    <generator>Hugo 0.125.2</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 11 Feb 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/games/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Jigsaw</title>
      <link>http://localhost:1313/posts/a-jigsaw/</link>
      <pubDate>Mon, 11 Feb 2013 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/a-jigsaw/</guid>
      <description>The other weekend, beset by insomnia, I decided to follow my own advice and get up to do something instead of wallowing unable to sleep. I pulled my emergency jigsaw out of the cupboard and set to it. I should stress that I mean a jigsaw puzzle and not an actually jigsaw: DIY at 2am is not such a good idea!&#xA;I&amp;rsquo;d forgotten how interesting jigsaw puzzles actually are. As I sat there contemplating the 1000 pieces and wondered exactly what I&amp;rsquo;d let myself in for, I found myself thinking about a number of things.</description>
    </item>
    <item>
      <title>Programming a Carcassonne Game</title>
      <link>http://localhost:1313/posts/programming-a-carcassonne-game/</link>
      <pubDate>Fri, 21 Sep 2012 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/programming-a-carcassonne-game/</guid>
      <description>Although I have put off finishing my UNO game for over eighteen months, I thought I would get started with another pet project of mine: making a Carcassonne game. This is not a serious affair, there is an excellent app of Carcassonne available for those of you who have iOS devices (it works particularly well on the iPad). The game just strikes me as having the right level of complexity to be a taxing yet attainable project.</description>
    </item>
    <item>
      <title>Programming an UNO game, part 2</title>
      <link>http://localhost:1313/posts/programming-an-uno-game-part-2/</link>
      <pubDate>Wed, 02 Feb 2011 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/programming-an-uno-game-part-2/</guid>
      <description>It turns out that programming the UNO game is not that complicated once you start designing the thing. This post will get the rules and game elements clear.&#xA;The deck An UNO deck consists of four sets of coloured cards (red, yellow, green and blue) together with eight wild cards. The non-wild cards are marked with either numbers or special symbols. The numbers range from zero to nine with two of each number except for the zero, which is unique.</description>
    </item>
    <item>
      <title>Programming an UNO game</title>
      <link>http://localhost:1313/posts/programming-an-uno-game/</link>
      <pubDate>Tue, 28 Dec 2010 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/programming-an-uno-game/</guid>
      <description>A new year, a new hobby I don’t write about programming enough. This is a shame because it is a very interesting subject and I find that the problem solving aspects of programming are very satisfying. Keenly aware of the need to do more hobby programming and to get up to speed on areas of software development that I’ve been neglecting, I have decided to give myself the project of creating a computerised version of the UNO card game.</description>
    </item>
  </channel>
</rss>
